// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SnapShot Tests should take an Address snapshot 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Address />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <AddressShow
        address={
                Object {
                        "city": "unknown",
                        "contact": "unknown",
                        "email": "unknown",
                        "firstName": "unknown",
                        "lastName": "unknown",
                        "phone": "unknown",
                        "state": "unknown",
                        "street": "unknown",
                        "website": "unknown",
                        "zip": "unknown",
                      }
        }
        setAddress={[Function]}
/>,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "address": Object {
          "city": "unknown",
          "contact": "unknown",
          "email": "unknown",
          "firstName": "unknown",
          "lastName": "unknown",
          "phone": "unknown",
          "state": "unknown",
          "street": "unknown",
          "website": "unknown",
          "zip": "unknown",
        },
        "setAddress": [Function],
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <AddressShow
          address={
                    Object {
                              "city": "unknown",
                              "contact": "unknown",
                              "email": "unknown",
                              "firstName": "unknown",
                              "lastName": "unknown",
                              "phone": "unknown",
                              "state": "unknown",
                              "street": "unknown",
                              "website": "unknown",
                              "zip": "unknown",
                            }
          }
          setAddress={[Function]}
/>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "address": Object {
            "city": "unknown",
            "contact": "unknown",
            "email": "unknown",
            "firstName": "unknown",
            "lastName": "unknown",
            "phone": "unknown",
            "state": "unknown",
            "street": "unknown",
            "website": "unknown",
            "zip": "unknown",
          },
          "setAddress": [Function],
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`SnapShot Tests should take an AddressShow snapshot 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <AddressShow
    address={
        Object {
            "city": "unknown",
            "contact": "unknown",
            "email": "unknown",
            "firstName": "unknown",
            "lastName": "unknown",
            "phone": "unknown",
            "state": "unknown",
            "street": "unknown",
            "website": "unknown",
            "zip": "unknown",
          }
    }
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <p
          className="App-intro"
>
          firstName:
          unknown
</p>,
        <p
          className="App-intro"
>
          lastName:
          unknown
</p>,
        <p
          className="App-intro"
>
          Street:
          unknown
</p>,
        <p
          className="App-intro"
>
          City:
          unknown
</p>,
        <p
          className="App-intro"
>
          State:
          unknown
</p>,
        <p
          className="App-intro"
>
          Zip:
          unknown
</p>,
        <p
          className="App-intro"
>
          Phone:
          unknown
</p>,
        <p
          className="App-intro"
>
          Website:
          unknown
</p>,
        <p
          className="App-intro"
>
          Email:
          unknown
</p>,
        <p
          className="App-intro"
>
          Contact:
          unknown
</p>,
        <RaisedButton
          disabled={false}
          fullWidth={false}
          icon={
                    <FontIcon
                              class="material-icons"
                              color="#f44336"
                              onMouseEnter={[Function]}
                              onMouseLeave={[Function]}
                    >
                              arrow_back_ios
                    </FontIcon>
          }
          id="setAddressLast"
          labelPosition="after"
          onClick={[Function]}
          primary={true}
          secondary={false}
          style={
                    Object {
                              "margin": 12,
                            }
          }
/>,
        <RaisedButton
          disabled={false}
          fullWidth={false}
          icon={
                    <FontIcon
                              class="material-icons"
                              color="#f44336"
                              onMouseEnter={[Function]}
                              onMouseLeave={[Function]}
                    >
                              rss_feed
                    </FontIcon>
          }
          id="setAddress"
          label="Set Address"
          labelPosition="before"
          onClick={[Function]}
          primary={true}
          secondary={false}
          style={
                    Object {
                              "margin": 12,
                            }
          }
/>,
        <RaisedButton
          disabled={false}
          fullWidth={false}
          icon={
                    <FontIcon
                              class="material-icons"
                              color="#f44336"
                              onMouseEnter={[Function]}
                              onMouseLeave={[Function]}
                    >
                              arrow_forward_ios
                    </FontIcon>
          }
          id="setAddressNext"
          labelPosition="after"
          onClick={[Function]}
          primary={true}
          secondary={false}
          style={
                    Object {
                              "margin": 12,
                            }
          }
/>,
      ],
      "className": "App",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            "firstName:",
            "unknown",
          ],
          "className": "App-intro",
        },
        "ref": null,
        "rendered": Array [
          "firstName:",
          "unknown",
        ],
        "type": "p",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            "lastName:",
            "unknown",
          ],
          "className": "App-intro",
        },
        "ref": null,
        "rendered": Array [
          "lastName:",
          "unknown",
        ],
        "type": "p",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            "Street:",
            "unknown",
          ],
          "className": "App-intro",
        },
        "ref": null,
        "rendered": Array [
          "Street:",
          "unknown",
        ],
        "type": "p",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            "City:",
            "unknown",
          ],
          "className": "App-intro",
        },
        "ref": null,
        "rendered": Array [
          "City:",
          "unknown",
        ],
        "type": "p",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            "State:",
            "unknown",
          ],
          "className": "App-intro",
        },
        "ref": null,
        "rendered": Array [
          "State:",
          "unknown",
        ],
        "type": "p",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            "Zip:",
            "unknown",
          ],
          "className": "App-intro",
        },
        "ref": null,
        "rendered": Array [
          "Zip:",
          "unknown",
        ],
        "type": "p",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            "Phone:",
            "unknown",
          ],
          "className": "App-intro",
        },
        "ref": null,
        "rendered": Array [
          "Phone:",
          "unknown",
        ],
        "type": "p",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            "Website:",
            "unknown",
          ],
          "className": "App-intro",
        },
        "ref": null,
        "rendered": Array [
          "Website:",
          "unknown",
        ],
        "type": "p",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            "Email:",
            "unknown",
          ],
          "className": "App-intro",
        },
        "ref": null,
        "rendered": Array [
          "Email:",
          "unknown",
        ],
        "type": "p",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            "Contact:",
            "unknown",
          ],
          "className": "App-intro",
        },
        "ref": null,
        "rendered": Array [
          "Contact:",
          "unknown",
        ],
        "type": "p",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "disabled": false,
          "fullWidth": false,
          "icon": <FontIcon
            class="material-icons"
            color="#f44336"
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
>
            arrow_back_ios
</FontIcon>,
          "id": "setAddressLast",
          "labelPosition": "after",
          "onClick": [Function],
          "primary": true,
          "secondary": false,
          "style": Object {
            "margin": 12,
          },
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "disabled": false,
          "fullWidth": false,
          "icon": <FontIcon
            class="material-icons"
            color="#f44336"
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
>
            rss_feed
</FontIcon>,
          "id": "setAddress",
          "label": "Set Address",
          "labelPosition": "before",
          "onClick": [Function],
          "primary": true,
          "secondary": false,
          "style": Object {
            "margin": 12,
          },
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "disabled": false,
          "fullWidth": false,
          "icon": <FontIcon
            class="material-icons"
            color="#f44336"
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
>
            arrow_forward_ios
</FontIcon>,
          "id": "setAddressNext",
          "labelPosition": "after",
          "onClick": [Function],
          "primary": true,
          "secondary": false,
          "style": Object {
            "margin": 12,
          },
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <p
            className="App-intro"
>
            firstName:
            unknown
</p>,
          <p
            className="App-intro"
>
            lastName:
            unknown
</p>,
          <p
            className="App-intro"
>
            Street:
            unknown
</p>,
          <p
            className="App-intro"
>
            City:
            unknown
</p>,
          <p
            className="App-intro"
>
            State:
            unknown
</p>,
          <p
            className="App-intro"
>
            Zip:
            unknown
</p>,
          <p
            className="App-intro"
>
            Phone:
            unknown
</p>,
          <p
            className="App-intro"
>
            Website:
            unknown
</p>,
          <p
            className="App-intro"
>
            Email:
            unknown
</p>,
          <p
            className="App-intro"
>
            Contact:
            unknown
</p>,
          <RaisedButton
            disabled={false}
            fullWidth={false}
            icon={
                        <FontIcon
                                    class="material-icons"
                                    color="#f44336"
                                    onMouseEnter={[Function]}
                                    onMouseLeave={[Function]}
                        >
                                    arrow_back_ios
                        </FontIcon>
            }
            id="setAddressLast"
            labelPosition="after"
            onClick={[Function]}
            primary={true}
            secondary={false}
            style={
                        Object {
                                    "margin": 12,
                                  }
            }
/>,
          <RaisedButton
            disabled={false}
            fullWidth={false}
            icon={
                        <FontIcon
                                    class="material-icons"
                                    color="#f44336"
                                    onMouseEnter={[Function]}
                                    onMouseLeave={[Function]}
                        >
                                    rss_feed
                        </FontIcon>
            }
            id="setAddress"
            label="Set Address"
            labelPosition="before"
            onClick={[Function]}
            primary={true}
            secondary={false}
            style={
                        Object {
                                    "margin": 12,
                                  }
            }
/>,
          <RaisedButton
            disabled={false}
            fullWidth={false}
            icon={
                        <FontIcon
                                    class="material-icons"
                                    color="#f44336"
                                    onMouseEnter={[Function]}
                                    onMouseLeave={[Function]}
                        >
                                    arrow_forward_ios
                        </FontIcon>
            }
            id="setAddressNext"
            labelPosition="after"
            onClick={[Function]}
            primary={true}
            secondary={false}
            style={
                        Object {
                                    "margin": 12,
                                  }
            }
/>,
        ],
        "className": "App",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              "firstName:",
              "unknown",
            ],
            "className": "App-intro",
          },
          "ref": null,
          "rendered": Array [
            "firstName:",
            "unknown",
          ],
          "type": "p",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              "lastName:",
              "unknown",
            ],
            "className": "App-intro",
          },
          "ref": null,
          "rendered": Array [
            "lastName:",
            "unknown",
          ],
          "type": "p",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              "Street:",
              "unknown",
            ],
            "className": "App-intro",
          },
          "ref": null,
          "rendered": Array [
            "Street:",
            "unknown",
          ],
          "type": "p",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              "City:",
              "unknown",
            ],
            "className": "App-intro",
          },
          "ref": null,
          "rendered": Array [
            "City:",
            "unknown",
          ],
          "type": "p",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              "State:",
              "unknown",
            ],
            "className": "App-intro",
          },
          "ref": null,
          "rendered": Array [
            "State:",
            "unknown",
          ],
          "type": "p",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              "Zip:",
              "unknown",
            ],
            "className": "App-intro",
          },
          "ref": null,
          "rendered": Array [
            "Zip:",
            "unknown",
          ],
          "type": "p",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              "Phone:",
              "unknown",
            ],
            "className": "App-intro",
          },
          "ref": null,
          "rendered": Array [
            "Phone:",
            "unknown",
          ],
          "type": "p",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              "Website:",
              "unknown",
            ],
            "className": "App-intro",
          },
          "ref": null,
          "rendered": Array [
            "Website:",
            "unknown",
          ],
          "type": "p",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              "Email:",
              "unknown",
            ],
            "className": "App-intro",
          },
          "ref": null,
          "rendered": Array [
            "Email:",
            "unknown",
          ],
          "type": "p",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              "Contact:",
              "unknown",
            ],
            "className": "App-intro",
          },
          "ref": null,
          "rendered": Array [
            "Contact:",
            "unknown",
          ],
          "type": "p",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "disabled": false,
            "fullWidth": false,
            "icon": <FontIcon
              class="material-icons"
              color="#f44336"
              onMouseEnter={[Function]}
              onMouseLeave={[Function]}
>
              arrow_back_ios
</FontIcon>,
            "id": "setAddressLast",
            "labelPosition": "after",
            "onClick": [Function],
            "primary": true,
            "secondary": false,
            "style": Object {
              "margin": 12,
            },
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "disabled": false,
            "fullWidth": false,
            "icon": <FontIcon
              class="material-icons"
              color="#f44336"
              onMouseEnter={[Function]}
              onMouseLeave={[Function]}
>
              rss_feed
</FontIcon>,
            "id": "setAddress",
            "label": "Set Address",
            "labelPosition": "before",
            "onClick": [Function],
            "primary": true,
            "secondary": false,
            "style": Object {
              "margin": 12,
            },
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "disabled": false,
            "fullWidth": false,
            "icon": <FontIcon
              class="material-icons"
              color="#f44336"
              onMouseEnter={[Function]}
              onMouseLeave={[Function]}
>
              arrow_forward_ios
</FontIcon>,
            "id": "setAddressNext",
            "labelPosition": "after",
            "onClick": [Function],
            "primary": true,
            "secondary": false,
            "style": Object {
              "margin": 12,
            },
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`SnapShot Tests should take an App snapshot 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <App />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <div
        className="App"
>
        <ElfHeader />
        <Route
                component={[Function]}
                exact={true}
                path="/"
        />
        <Route
                component={[Function]}
                path="/get-file"
        />
</div>,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <ElfHeader />,
          <Route
            component={[Function]}
            exact={true}
            path="/"
/>,
          <Route
            component={[Function]}
            path="/get-file"
/>,
        ],
        "className": "App",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "component": [Function],
            "exact": true,
            "path": "/",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "component": [Function],
            "path": "/get-file",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "div",
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <div
          className="App"
>
          <ElfHeader />
          <Route
                    component={[Function]}
                    exact={true}
                    path="/"
          />
          <Route
                    component={[Function]}
                    path="/get-file"
          />
</div>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <ElfHeader />,
            <Route
              component={[Function]}
              exact={true}
              path="/"
/>,
            <Route
              component={[Function]}
              path="/get-file"
/>,
          ],
          "className": "App",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "component": [Function],
              "exact": true,
              "path": "/",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "component": [Function],
              "path": "/get-file",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": "div",
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`SnapShot Tests should take an ElfHeader snapshot 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ElfHeader />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <div>
        <AppBar
                iconClassNameRight="muidocs-icon-navigation-expand-more"
                onLeftIconButtonClick={[Function]}
                showMenuIconButton={true}
                title="Address Maven"
                zDepth={1}
        />
        <Drawer
                disableSwipeToOpen={false}
                docked={false}
                onRequestChange={[Function]}
                open={false}
                openSecondary={false}
                swipeAreaWidth={30}
                width={200}
                zDepth={2}
        >
                <AppBar
                        showMenuIconButton={true}
                        title="Address Maven"
                        zDepth={1}
                />
                <MenuItem
                        anchorOrigin={
                                Object {
                                        "horizontal": "right",
                                        "vertical": "top",
                                      }
                        }
                        checked={false}
                        containerElement={
                                <Link
                                        replace={false}
                                        to="/"
                                />
                        }
                        desktop={false}
                        disabled={false}
                        focusState="none"
                        insetChildren={false}
                        onClick={[Function]}
                        primaryText="Address"
                        targetOrigin={
                                Object {
                                        "horizontal": "left",
                                        "vertical": "top",
                                      }
                        }
                />
                <MenuItem
                        anchorOrigin={
                                Object {
                                        "horizontal": "right",
                                        "vertical": "top",
                                      }
                        }
                        checked={false}
                        containerElement={
                                <Link
                                        replace={false}
                                        to="/get-file"
                                />
                        }
                        desktop={false}
                        disabled={false}
                        focusState="none"
                        insetChildren={false}
                        onClick={[Function]}
                        primaryText="Get File"
                        targetOrigin={
                                Object {
                                        "horizontal": "left",
                                        "vertical": "top",
                                      }
                        }
                />
        </Drawer>
</div>,
      "className": "menu",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <AppBar
            iconClassNameRight="muidocs-icon-navigation-expand-more"
            onLeftIconButtonClick={[Function]}
            showMenuIconButton={true}
            title="Address Maven"
            zDepth={1}
/>,
          <Drawer
            disableSwipeToOpen={false}
            docked={false}
            onRequestChange={[Function]}
            open={false}
            openSecondary={false}
            swipeAreaWidth={30}
            width={200}
            zDepth={2}
>
            <AppBar
                        showMenuIconButton={true}
                        title="Address Maven"
                        zDepth={1}
            />
            <MenuItem
                        anchorOrigin={
                                    Object {
                                                "horizontal": "right",
                                                "vertical": "top",
                                              }
                        }
                        checked={false}
                        containerElement={
                                    <Link
                                                replace={false}
                                                to="/"
                                    />
                        }
                        desktop={false}
                        disabled={false}
                        focusState="none"
                        insetChildren={false}
                        onClick={[Function]}
                        primaryText="Address"
                        targetOrigin={
                                    Object {
                                                "horizontal": "left",
                                                "vertical": "top",
                                              }
                        }
            />
            <MenuItem
                        anchorOrigin={
                                    Object {
                                                "horizontal": "right",
                                                "vertical": "top",
                                              }
                        }
                        checked={false}
                        containerElement={
                                    <Link
                                                replace={false}
                                                to="/get-file"
                                    />
                        }
                        desktop={false}
                        disabled={false}
                        focusState="none"
                        insetChildren={false}
                        onClick={[Function]}
                        primaryText="Get File"
                        targetOrigin={
                                    Object {
                                                "horizontal": "left",
                                                "vertical": "top",
                                              }
                        }
            />
</Drawer>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "iconClassNameRight": "muidocs-icon-navigation-expand-more",
            "onLeftIconButtonClick": [Function],
            "showMenuIconButton": true,
            "title": "Address Maven",
            "zDepth": 1,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <AppBar
                showMenuIconButton={true}
                title="Address Maven"
                zDepth={1}
/>,
              <MenuItem
                anchorOrigin={
                                Object {
                                                "horizontal": "right",
                                                "vertical": "top",
                                              }
                }
                checked={false}
                containerElement={
                                <Link
                                                replace={false}
                                                to="/"
                                />
                }
                desktop={false}
                disabled={false}
                focusState="none"
                insetChildren={false}
                onClick={[Function]}
                primaryText="Address"
                targetOrigin={
                                Object {
                                                "horizontal": "left",
                                                "vertical": "top",
                                              }
                }
/>,
              <MenuItem
                anchorOrigin={
                                Object {
                                                "horizontal": "right",
                                                "vertical": "top",
                                              }
                }
                checked={false}
                containerElement={
                                <Link
                                                replace={false}
                                                to="/get-file"
                                />
                }
                desktop={false}
                disabled={false}
                focusState="none"
                insetChildren={false}
                onClick={[Function]}
                primaryText="Get File"
                targetOrigin={
                                Object {
                                                "horizontal": "left",
                                                "vertical": "top",
                                              }
                }
/>,
            ],
            "disableSwipeToOpen": false,
            "docked": false,
            "onRequestChange": [Function],
            "open": false,
            "openSecondary": false,
            "swipeAreaWidth": 30,
            "width": 200,
            "zDepth": 2,
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "showMenuIconButton": true,
                "title": "Address Maven",
                "zDepth": 1,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "anchorOrigin": Object {
                  "horizontal": "right",
                  "vertical": "top",
                },
                "checked": false,
                "containerElement": <Link
                  replace={false}
                  to="/"
/>,
                "desktop": false,
                "disabled": false,
                "focusState": "none",
                "insetChildren": false,
                "onClick": [Function],
                "primaryText": "Address",
                "targetOrigin": Object {
                  "horizontal": "left",
                  "vertical": "top",
                },
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "anchorOrigin": Object {
                  "horizontal": "right",
                  "vertical": "top",
                },
                "checked": false,
                "containerElement": <Link
                  replace={false}
                  to="/get-file"
/>,
                "desktop": false,
                "disabled": false,
                "focusState": "none",
                "insetChildren": false,
                "onClick": [Function],
                "primaryText": "Get File",
                "targetOrigin": Object {
                  "horizontal": "left",
                  "vertical": "top",
                },
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": [Function],
        },
      ],
      "type": "div",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div>
          <AppBar
                    iconClassNameRight="muidocs-icon-navigation-expand-more"
                    onLeftIconButtonClick={[Function]}
                    showMenuIconButton={true}
                    title="Address Maven"
                    zDepth={1}
          />
          <Drawer
                    disableSwipeToOpen={false}
                    docked={false}
                    onRequestChange={[Function]}
                    open={false}
                    openSecondary={false}
                    swipeAreaWidth={30}
                    width={200}
                    zDepth={2}
          >
                    <AppBar
                              showMenuIconButton={true}
                              title="Address Maven"
                              zDepth={1}
                    />
                    <MenuItem
                              anchorOrigin={
                                        Object {
                                                  "horizontal": "right",
                                                  "vertical": "top",
                                                }
                              }
                              checked={false}
                              containerElement={
                                        <Link
                                                  replace={false}
                                                  to="/"
                                        />
                              }
                              desktop={false}
                              disabled={false}
                              focusState="none"
                              insetChildren={false}
                              onClick={[Function]}
                              primaryText="Address"
                              targetOrigin={
                                        Object {
                                                  "horizontal": "left",
                                                  "vertical": "top",
                                                }
                              }
                    />
                    <MenuItem
                              anchorOrigin={
                                        Object {
                                                  "horizontal": "right",
                                                  "vertical": "top",
                                                }
                              }
                              checked={false}
                              containerElement={
                                        <Link
                                                  replace={false}
                                                  to="/get-file"
                                        />
                              }
                              desktop={false}
                              disabled={false}
                              focusState="none"
                              insetChildren={false}
                              onClick={[Function]}
                              primaryText="Get File"
                              targetOrigin={
                                        Object {
                                                  "horizontal": "left",
                                                  "vertical": "top",
                                                }
                              }
                    />
          </Drawer>
</div>,
        "className": "menu",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <AppBar
              iconClassNameRight="muidocs-icon-navigation-expand-more"
              onLeftIconButtonClick={[Function]}
              showMenuIconButton={true}
              title="Address Maven"
              zDepth={1}
/>,
            <Drawer
              disableSwipeToOpen={false}
              docked={false}
              onRequestChange={[Function]}
              open={false}
              openSecondary={false}
              swipeAreaWidth={30}
              width={200}
              zDepth={2}
>
              <AppBar
                            showMenuIconButton={true}
                            title="Address Maven"
                            zDepth={1}
              />
              <MenuItem
                            anchorOrigin={
                                          Object {
                                                        "horizontal": "right",
                                                        "vertical": "top",
                                                      }
                            }
                            checked={false}
                            containerElement={
                                          <Link
                                                        replace={false}
                                                        to="/"
                                          />
                            }
                            desktop={false}
                            disabled={false}
                            focusState="none"
                            insetChildren={false}
                            onClick={[Function]}
                            primaryText="Address"
                            targetOrigin={
                                          Object {
                                                        "horizontal": "left",
                                                        "vertical": "top",
                                                      }
                            }
              />
              <MenuItem
                            anchorOrigin={
                                          Object {
                                                        "horizontal": "right",
                                                        "vertical": "top",
                                                      }
                            }
                            checked={false}
                            containerElement={
                                          <Link
                                                        replace={false}
                                                        to="/get-file"
                                          />
                            }
                            desktop={false}
                            disabled={false}
                            focusState="none"
                            insetChildren={false}
                            onClick={[Function]}
                            primaryText="Get File"
                            targetOrigin={
                                          Object {
                                                        "horizontal": "left",
                                                        "vertical": "top",
                                                      }
                            }
              />
</Drawer>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "iconClassNameRight": "muidocs-icon-navigation-expand-more",
              "onLeftIconButtonClick": [Function],
              "showMenuIconButton": true,
              "title": "Address Maven",
              "zDepth": 1,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <AppBar
                  showMenuIconButton={true}
                  title="Address Maven"
                  zDepth={1}
/>,
                <MenuItem
                  anchorOrigin={
                                    Object {
                                                      "horizontal": "right",
                                                      "vertical": "top",
                                                    }
                  }
                  checked={false}
                  containerElement={
                                    <Link
                                                      replace={false}
                                                      to="/"
                                    />
                  }
                  desktop={false}
                  disabled={false}
                  focusState="none"
                  insetChildren={false}
                  onClick={[Function]}
                  primaryText="Address"
                  targetOrigin={
                                    Object {
                                                      "horizontal": "left",
                                                      "vertical": "top",
                                                    }
                  }
/>,
                <MenuItem
                  anchorOrigin={
                                    Object {
                                                      "horizontal": "right",
                                                      "vertical": "top",
                                                    }
                  }
                  checked={false}
                  containerElement={
                                    <Link
                                                      replace={false}
                                                      to="/get-file"
                                    />
                  }
                  desktop={false}
                  disabled={false}
                  focusState="none"
                  insetChildren={false}
                  onClick={[Function]}
                  primaryText="Get File"
                  targetOrigin={
                                    Object {
                                                      "horizontal": "left",
                                                      "vertical": "top",
                                                    }
                  }
/>,
              ],
              "disableSwipeToOpen": false,
              "docked": false,
              "onRequestChange": [Function],
              "open": false,
              "openSecondary": false,
              "swipeAreaWidth": 30,
              "width": 200,
              "zDepth": 2,
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "showMenuIconButton": true,
                  "title": "Address Maven",
                  "zDepth": 1,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "anchorOrigin": Object {
                    "horizontal": "right",
                    "vertical": "top",
                  },
                  "checked": false,
                  "containerElement": <Link
                    replace={false}
                    to="/"
/>,
                  "desktop": false,
                  "disabled": false,
                  "focusState": "none",
                  "insetChildren": false,
                  "onClick": [Function],
                  "primaryText": "Address",
                  "targetOrigin": Object {
                    "horizontal": "left",
                    "vertical": "top",
                  },
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "anchorOrigin": Object {
                    "horizontal": "right",
                    "vertical": "top",
                  },
                  "checked": false,
                  "containerElement": <Link
                    replace={false}
                    to="/get-file"
/>,
                  "desktop": false,
                  "disabled": false,
                  "focusState": "none",
                  "insetChildren": false,
                  "onClick": [Function],
                  "primaryText": "Get File",
                  "targetOrigin": Object {
                    "horizontal": "left",
                    "vertical": "top",
                  },
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": [Function],
          },
        ],
        "type": "div",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`SnapShot Tests should take an GetFile snapshot 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <GetFile />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <p
          className="App-intro"
>
          file:
          unknown
</p>,
        <RaisedButton
          disabled={false}
          fullWidth={false}
          icon={
                    <FontIcon
                              className="material-icons"
                              color="#f44336"
                              onMouseEnter={[Function]}
                              onMouseLeave={[Function]}
                    >
                              account_circle
                    </FontIcon>
          }
          id="getFile"
          label="Get File"
          labelPosition="before"
          onClick={[Function]}
          primary={true}
          secondary={false}
          style={
                    Object {
                              "margin": 12,
                            }
          }
/>,
      ],
      "className": "App",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            "file:",
            "unknown",
          ],
          "className": "App-intro",
        },
        "ref": null,
        "rendered": Array [
          "file:",
          "unknown",
        ],
        "type": "p",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "disabled": false,
          "fullWidth": false,
          "icon": <FontIcon
            className="material-icons"
            color="#f44336"
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
>
            account_circle
</FontIcon>,
          "id": "getFile",
          "label": "Get File",
          "labelPosition": "before",
          "onClick": [Function],
          "primary": true,
          "secondary": false,
          "style": Object {
            "margin": 12,
          },
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <p
            className="App-intro"
>
            file:
            unknown
</p>,
          <RaisedButton
            disabled={false}
            fullWidth={false}
            icon={
                        <FontIcon
                                    className="material-icons"
                                    color="#f44336"
                                    onMouseEnter={[Function]}
                                    onMouseLeave={[Function]}
                        >
                                    account_circle
                        </FontIcon>
            }
            id="getFile"
            label="Get File"
            labelPosition="before"
            onClick={[Function]}
            primary={true}
            secondary={false}
            style={
                        Object {
                                    "margin": 12,
                                  }
            }
/>,
        ],
        "className": "App",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              "file:",
              "unknown",
            ],
            "className": "App-intro",
          },
          "ref": null,
          "rendered": Array [
            "file:",
            "unknown",
          ],
          "type": "p",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "disabled": false,
            "fullWidth": false,
            "icon": <FontIcon
              className="material-icons"
              color="#f44336"
              onMouseEnter={[Function]}
              onMouseLeave={[Function]}
>
              account_circle
</FontIcon>,
            "id": "getFile",
            "label": "Get File",
            "labelPosition": "before",
            "onClick": [Function],
            "primary": true,
            "secondary": false,
            "style": Object {
              "margin": 12,
            },
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`SnapShot Tests should take an Header snapshot 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Header />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <header
        className="App-header"
>
        <img
                alt="logo"
                className="App-logo"
                src="reactlogo.svg"
        />
        <h2
                className="App-title"
        >
                Welcome to React
        </h2>
</header>,
      "className": "App",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <img
            alt="logo"
            className="App-logo"
            src="reactlogo.svg"
/>,
          <h2
            className="App-title"
>
            Welcome to React
</h2>,
        ],
        "className": "App-header",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "alt": "logo",
            "className": "App-logo",
            "src": "reactlogo.svg",
          },
          "ref": null,
          "rendered": null,
          "type": "img",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Welcome to React",
            "className": "App-title",
          },
          "ref": null,
          "rendered": "Welcome to React",
          "type": "h2",
        },
      ],
      "type": "header",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <header
          className="App-header"
>
          <img
                    alt="logo"
                    className="App-logo"
                    src="reactlogo.svg"
          />
          <h2
                    className="App-title"
          >
                    Welcome to React
          </h2>
</header>,
        "className": "App",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <img
              alt="logo"
              className="App-logo"
              src="reactlogo.svg"
/>,
            <h2
              className="App-title"
>
              Welcome to React
</h2>,
          ],
          "className": "App-header",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "alt": "logo",
              "className": "App-logo",
              "src": "reactlogo.svg",
            },
            "ref": null,
            "rendered": null,
            "type": "img",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Welcome to React",
              "className": "App-title",
            },
            "ref": null,
            "rendered": "Welcome to React",
            "type": "h2",
          },
        ],
        "type": "header",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
